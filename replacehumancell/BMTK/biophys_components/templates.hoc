


///////////////////////////////////
begintemplate Layer5_pyr
public NumSoma
NumSoma=1

public is_art
public init, topol, basic_shape, subsets, geom, biophys
public x, y, z, position, connect2target
public ampa,nmda,gabaa,gabab

public soma, dend
public all, somatic, dendritic, apical, basal, dend0, dend1, dend2, dend3
public dend4, dend5, dend6, dend7
// if gbar_x is declared as 'public', can not be set in biophys() below
// public gbar_ar, gbar_cat 

objref synlist

proc init() {
  topol()
  subsets()
  geom()
  biophys()
  geom_nseg()
  synlist = new List()
  synapses()
  x = y = z = 0 // only change via position
}

create soma[NumSoma], dend[8]

proc topol() { local i
  connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend(1)
  for i = 3, 4 connect dend[i](0), dend[i-1](1)
  connect dend[5](0), soma(0) //was soma(1)this is correct! 
  for i = 6, 7 connect dend[i](0), dend[5](1)
  basic_shape()
}

 proc basic_shape() {
// THESE AND LENGHTHS MUST CHANGE TOGETHER!!!
  soma {pt3dclear() pt3dadd(0, 0, 0, 1) pt3dadd(0, 23, 0, 1)}
  dend {pt3dclear() pt3dadd(0, 23, 0, 1) pt3dadd(0, 83, 0, 1)}
  dend[1] {pt3dclear() pt3dadd(0, 83, 0, 1) pt3dadd(-150, 83, 0, 1)}
  dend[2] {pt3dclear() pt3dadd(0, 83, 0, 1) pt3dadd(0, 483, 0, 1)}
  dend[3] {pt3dclear() pt3dadd(0, 483, 0, 1) pt3dadd(0, 883, 0, 1)}
  dend[4] {pt3dclear() pt3dadd(0, 883, 0, 1) pt3dadd(0, 1133, 0, 1)}
  dend[5] {pt3dclear() pt3dadd(0, 0, 0, 1) pt3dadd(0, -50, 0, 1)}
  dend[6] {pt3dclear() pt3dadd(0, -50, 0, 1) pt3dadd(-106, -156, 0, 1)}
  dend[7] {pt3dclear() pt3dadd(0, -50, 0, 1) pt3dadd(106, -156, 0, 1)}
} 

objref all, somatic, dendritic, apical, basal, dend0, dend1, dend2, dend3, dend4
objref dend5, dend6, dend7
proc subsets() { local i
  objref all, somatic, dendritic, apical, basal, dend0, dend1, dend2, dend3 
  objref dend4, dend5, dend6, dend7

  all = new SectionList()
  somatic = new SectionList()
   for i=0,NumSoma{ soma[i] all.append()
    

    soma[i] somatic.append()}

  for i=0, 7 dend[i] all.append()
  dendritic = new SectionList()
    for i=0, 7 dend[i] dendritic.append()

  apical = new SectionList()
    for i=0, 4 dend[i] apical.append()

  basal = new SectionList()
    for i=5, 7 dend[i] basal.append()

  dend0 = new SectionList()
	dend[0] dend0.append()

  dend1 = new SectionList()
	dend[1] dend1.append()

  dend2 = new SectionList()
	dend[2] dend2.append()

  dend3 = new SectionList()
	dend[3] dend3.append()

  dend4 = new SectionList()
	dend[4] dend4.append()

  dend5 = new SectionList()
	dend[5] dend5.append()

  dend6 = new SectionList()
	dend[6] dend6.append()

  dend7 = new SectionList()
	dend[7] dend7.append()


}
//increased lengths and diams by 70% for human size
proc geom() {
  forsec all {  }
    // soma.L = 13 //BUSH 1999 spike amp smaller
   soma[0].L=39 //Bush 1993
   dend[1].L = 102
   dend[1].L = 255
   dend[2].L = 680 //default 400
   dend[3].L = 680 //default 400
   dend[4].L = 425
   dend[5].L = 85
   dend[6].L = 255 // default 150
   dend[7].L = 255 // default 150
    //soma.diam = 18.95 //Bush 1999
   soma[0].diam = 28.9 //Bush 1993
   dend[1].diam = 10.2
   dend[1].diam = 5.1
   dend[2].diam = 7.48 //default 4.4
   dend[3].diam = 4.93 //default 2.9
   dend[4].diam = 3.4
   dend[5].diam = 6.8
   dend[6].diam = 8.5
   dend[7].diam = 8.5
}
proc geom_nseg() {
  soma area(.5) // make sure diam reflects 3d points
   forsec all { if (L < 50) {nseg=1} else {nseg=int(L/50)} }
}
proc biophys() {
/* USING DEFAULT NEURON HH GIVES CORRECT SPIKE WIDTH */
	forsec all{
		Ra=200
		cm=0.85 // decreased by 70%
		
	}
	forsec somatic {
		insert hh
		gnabar_hh=0.16 // to match latency with old segmentation
		gkbar_hh=0.01 //0.01 0.09 for spiking
		gl_hh=0.0000426 //decreased by 70%
		el_hh=-65 //default -65
		insert ca
		gbar_ca=60// 100 //150 pS/um2=0.00015 S/cm2
		insert cad
		taur_cad=20 //20 ms 
		insert kca
		gbar_kca=0.0002//0.0002 //(0.00015 mho/cm2= S/cm2)
		insert km
		gbar_km=200//200 //10 pS/um2
                insert cat
                gbar_cat=0.002
                insert ar
                gbar_ar=0.00006
	}
	forsec dendritic {
		insert hh
		gnabar_hh=0.14 //0.45 S/cm2
		gkbar_hh=0.01 //0.09 for spiking
		gl_hh=0.0000426
		el_hh=-71 //default -71
		insert ca
		gbar_ca=60//100 //15 pS/um2
		insert cad
		taur_cad=20 //20 ms 
		insert kca
		gbar_kca=0.0002//0.0002 //0.015(mho/cm2= S/cm2)
		insert km
		gbar_km=200//200 //10 pS/um2
                insert cat
                gbar_cat=0
                insert ar
                gbar_ar=0

	} 

 }  //end proc biophysics 
proc position() { local i
  soma for i = 0, n3d()-1 {
    pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
  }
  x = $1  y = $2  z = $3
}
proc connect2target() { //$o1 target point process, $o2 returned NetCon
  soma $o2 = new NetCon(&v(1), $o1)
}

objref ampa[9],nmda[9],gabaa[9],gabab[9]
//proc synapses() {
//  dend[0]{ ampa[0] = new AMPA() nmda[0] = new NMDA() gabaa[0] = new GABAA() gabab[0] = new GABAB() }
//  dend[1]{ ampa[1] = new AMPA() nmda[1] = new NMDA() gabaa[1] = new GABAA() gabab[1] = new GABAB() }           
//  dend[2]{ ampa[2] = new AMPA() nmda[2] = new NMDA() gabaa[2] = new GABAA() gabab[2] = new GABAB() }           
//  dend[3]{ ampa[3] = new AMPA() nmda[3] = new NMDA() gabaa[3] = new GABAA() gabab[3] = new GABAB() }           
//  dend[4]{ ampa[4] = new AMPA() nmda[4] = new NMDA() gabaa[4] = new GABAA() gabab[4] = new GABAB() }           
//  dend[5]{ ampa[5] = new AMPA() nmda[5] = new NMDA() gabaa[5] = new GABAA() gabab[5] = new GABAB() }           
//  dend[6]{ ampa[6] = new AMPA() nmda[6] = new NMDA() gabaa[6] = new GABAA() gabab[6] = new GABAB() }           
//  dend[7]{ ampa[7] = new AMPA() nmda[7] = new NMDA() gabaa[7] = new GABAA() gabab[7] = new GABAB() }           
//  soma[0]{ ampa[8] = new AMPA() nmda[8] = new NMDA() gabaa[8] = new GABAA() gabab[8] = new GABAB() }
//}

func is_art() { return 0 }

endtemplate Layer5_pyr


//////////////////////////////////////////////////////////////////////
begintemplate Layer2_pyr
public init, topol, basic_shape, subsets, geom, biophys
public synlist, x, y, z, position, connect2target
public ampa,nmda,gabaa,gabab

public soma, dend
public all, somatic, dendritic, apical, basal, dend0, dend1
public dend2, dend3, dend4, dend5, dend6 
public pre, ampa, gabaa, gabab, nmda
public gbar_ar, gbar_cat

objref synlist

proc init() {
  topol()
  subsets()
  geom()
  biophys()
  geom_nseg()
  synlist = new List()
  synapses()
  x = y = z = 0 // only change via position
}

create soma[0], dend[7]

proc topol() { local i
  connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend(1)
  connect dend[3](0), dend[2](1)
  connect dend[4](0), soma[0](0) //was soma(1), 0 is correct!
  for i = 5, 6 connect dend[i](0), dend[4](1)
  basic_shape()
}
proc basic_shape() {
  soma[0] {pt3dclear() pt3dadd(-50, 765, 0, 1) pt3dadd(-50, 778, 0, 1)}
  dend[0] {pt3dclear() pt3dadd(-50, 778, 0, 1) pt3dadd(-50, 813, 0, 1)}
  dend[1] {pt3dclear() pt3dadd(-50, 813, 0, 1) pt3dadd(-250, 813, 0, 1)}
  dend[2] {pt3dclear() pt3dadd(-50, 813, 0, 1) pt3dadd(-50, 993, 0, 1)}
  dend[3] {pt3dclear() pt3dadd(-50, 993, 0, 1) pt3dadd(-50, 1133, 0, 1)}
  dend[4] {pt3dclear() pt3dadd(-50, 765, 0, 1) pt3dadd(-50, 715, 0, 1)}
  dend[5] {pt3dclear() pt3dadd(-50, 715, 0, 1) pt3dadd(-156, 609, 0, 1)}
  dend[6] {pt3dclear() pt3dadd(-50, 715, 0, 1) pt3dadd(56, 609, 0, 1)}
}

objref all, somatic, dendritic, apical, basal, dend0, dend1
objref dend2, dend3, dend4, dend5, dend6
proc subsets() { local i
  objref all, somatic, dendritic, apical, basal, dend0, dend1
  objref dend2, dend3, dend4, dend5, dend6
  all = new SectionList()
    soma all.append()
    for i=0, 6 dend[i] all.append()

  somatic = new SectionList()
    soma[0] somatic.append()

  dendritic = new SectionList()
    for i=0, 6 dend[i] dendritic.append()

  apical = new SectionList()
    for i=0, 3 dend[i] apical.append()

  basal = new SectionList()
    for i=4, 6 dend[i] basal.append()

  dend0 = new SectionList()
    dend[0] dend0.append()

  dend1 = new SectionList()
    dend[1] dend1.append()

  dend2 = new SectionList()
    dend[2] dend2.append()

  dend3 = new SectionList()
    dend[3] dend3.append()

  dend4 = new SectionList()
    dend[4] dend4.append()

  dend5 = new SectionList()
    dend[5] dend5.append()

  dend6 = new SectionList()
    dend[6] dend6.append()

}
// increased by 70% for human
proc geom() {
  forsec all {  }
   soma[0].L = 22.1
   dend[0].L = 59.5
   dend[1].L = 340
   dend[2].L = 306
   dend[3].L = 238
   dend[4].L = 85
   dend[5].L = 255
   dend[6].L = 255
   
    soma[0].diam = 23.4
    dend[0].diam = 4.25
    dend[1].diam = 3.91
    dend[2].diam = 4.08
    dend[3].diam = 3.4
    dend[4].diam = 4.25
    dend[5].diam = 2.72
    dend[6].diam = 2.72

}
proc geom_nseg() {
  soma[0] area(.5) // make sure diam reflects 3d points
   forsec all { if (L < 50) {nseg=1} else {nseg=int(L/50)} }
}
proc biophys() {
/* USING DEFAULT NEURON HH GIVES CORRECT SPIKE WIDTH */
 forsec all {
    Ra = 200
    cm = 0.6195 // decreased 70% from 2.065
	}
forsec somatic {
		insert hh
		gnabar_hh=0.18 // to match latency with old segmentation
		gkbar_hh=0.01 //0.09
		gl_hh=0.0000426 //decreased 70% for human
		el_hh=-65
		insert km
		gbar_km=250 //450 pS/um2
                insert cat
                gbar_cat=0.0
                insert ar
                gbar_ar=0.0

	}
	forsec dendritic {
		insert hh
		gnabar_hh=0.15//0.45 S/cm2
		gkbar_hh=0.01 //0.09
		gl_hh=0.0000426 
		el_hh=-65
		insert km
		gbar_km=250 //450 pS/um2 =uS/cm2
                insert cat
                gbar_cat=0.0
                insert ar
                gbar_ar=0.0

	} 

 }  //end proc biophysics 


proc position() { local i
  soma for i = 0, n3d()-1 {
    pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
  }
  x = $1  y = $2  z = $3
}
proc connect2target() { //$o1 target point process, $o2 returned NetCon
  soma $o2 = new NetCon(&v(1), $o1)
}

objref ampa[8],nmda[8],gabaa[8],gabab[8]
//proc synapses() {
//  dend[0]{ ampa[0] = new AMPA() nmda[0] = new NMDA() gabaa[0] = new GABAA() gabab[0] = new GABAB() }
//  dend[1]{ ampa[1] = new AMPA() nmda[1] = new NMDA() gabaa[1] = new GABAA() gabab[1] = new GABAB() }
//  dend[2]{ ampa[2] = new AMPA() nmda[2] = new NMDA() gabaa[2] = new GABAA() gabab[2] = new GABAB() }
//  dend[3]{ ampa[3] = new AMPA() nmda[3] = new NMDA() gabaa[3] = new GABAA() gabab[3] = new GABAB() }
//  dend[4]{ ampa[4] = new AMPA() nmda[4] = new NMDA() gabaa[4] = new GABAA() gabab[4] = new GABAB() }
//  dend[5]{ ampa[5] = new AMPA() nmda[5] = new NMDA() gabaa[5] = new GABAA() gabab[5] = new GABAB() }
//  dend[6]{ ampa[6] = new AMPA() nmda[6] = new NMDA() gabaa[6] = new GABAA() gabab[6] = new GABAB() }
//  soma[0]{ ampa[7] = new AMPA() nmda[7] = new NMDA() gabaa[7] = new GABAA() gabab[7] = new GABAB() }
//} 

func is_art() { return 0 }

endtemplate Layer2_pyr

//////////////////////////////////////////


begintemplate Inhib

 all = new SectionList()
 somatic = new SectionList()
 basal = new SectionList()
 apical = new SectionList()
 axonal = new SectionList()
  public soma
create soma[0]	// declares soma as a membrane compartment object

    
    
 	all = new SectionList()
	somatic = new SectionList()
	basal = new SectionList()
	apical = new SectionList()

	
   soma[0] somatic.append()

	

public cell,connect2target,init,ampa,nmda,gabaa,gabab
external AMPA,NMDA,GABAA,GABAB

objref ampa[1],nmda[1],gabaa[1],gabab[1]
create cell

proc init(){
  access  cell
                L=39
                diam=20
                Ra=200
                cm=0.85
                insert hh
synapses()
}

proc synapses() {
cell {
      ampa = new AMPA()
      nmda = new NMDA()
      gabaa = new GABAA()
      gabab = new GABAB()
     }
}

// proc connect2target() {
// $o2 = new NetCon(cell(0.5), $o1)
//proc connect2target() { //$o1 target point process, $o2 returned NetCon
//  cell $o2 = new NetCon(&v(1), $o1)
//}

define_shape()

endtemplate Inhib
